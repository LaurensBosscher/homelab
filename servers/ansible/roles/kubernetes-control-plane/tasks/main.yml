---
- name: Get Tailscale IP address
  ansible.builtin.shell: ip -4 addr show tailscale0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}'
  register: tailscale_ip
  changed_when: false
  failed_when: tailscale_ip.stdout == ""

- name: Ensure /etc/rancher/k3s directory exists
  ansible.builtin.file:
    path: /etc/rancher/k3s
    state: directory
    mode: '0755'

- name: Create /etc/rancher/k3s/config.yaml with Tailscale configuration
  ansible.builtin.copy:
    content: |
      # Node networking (Tailscale)
      bind-address: {{ tailscale_ip.stdout }}
      node-external-ip: {{ tailscale_ip.stdout }}  # Advertises Tailscale IP for external access
      node-ip: {{ tailscale_ip.stdout }}  # Sets internal node IP to Tailscale address
      advertise-address: {{ tailscale_ip.stdout }}  # Kubelet advertises this IP for node communication

      # Flannel CNI binding
      flannel-iface: tailscale0  # Binds Flannel to Tailscale interface for pod networking

      # Swap support for ZRAM
      failSwapOn: false
      memorySwap:
        swapBehavior: LimitedSwap

      # Disable Traefik (use your own ingress controller)
      disable: traefik

      # Enable secret encryption at rest
      secrets-encryption: true

      # etcd tunings for high-latency (in milliseconds as integers)
      etcd-arg:
        - "heartbeat-interval=500"  # 500ms
        - "election-timeout=5000"   # 5 seconds = 5000ms

      # Wide cluster optimizations
      kube-apiserver-arg:
        - "default-not-ready-toleration-seconds=30"
        - "default-unreachable-toleration-seconds=30"
        - "node-monitor-grace-period=30s"
        - "node-monitor-period=10s"
      kubelet-arg:
        - "node-status-update-frequency=10s"
        - "max-pods=200"  # Increase pod density for large clusters
    dest: /etc/rancher/k3s/config.yaml
    mode: '0644'