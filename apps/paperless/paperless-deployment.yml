apiVersion: v1
kind: List
items:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: paperless
      labels:
        app: paperless
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: paperless
      template:
        metadata:
          labels:
            app: paperless
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  preference:
                    matchExpressions:
                      - key: region
                        operator: In
                        values:
                          - us
          containers:
            - name: paperless
              image: ghcr.io/paperless-ngx/paperless-ngx:latest
              ports:
                - containerPort: 8000
              env:
                - name: TZ
                  value: Europe/Zurich
                - name: PAPERLESS_REDIS
                  value: redis://paperless-redis:6379
                - name: PAPERLESS_DBHOST
                  value: paperless-postgres
                - name: GRANIAN_PORT
                  value: "8000"
                - name: GRANIAN_HOST
                  value: "0.0.0.0"
                - name: PAPERLESS_URL
                  value: https://paperless.bosscher.ch
                - name: PAPERLESS_DBNAME
                  valueFrom:
                    secretKeyRef:
                      name: paperless-postgres
                      key: POSTGRES_DB
                - name: PAPERLESS_DBUSER
                  valueFrom:
                    secretKeyRef:
                      name: paperless-postgres
                      key: POSTGRES_USER
                - name: PAPERLESS_DBPASS
                  valueFrom:
                    secretKeyRef:
                      name: paperless-postgres
                      key: POSTGRES_PASSWORD
                - name: PAPERLESS_TIKA_ENABLED
                  value: "1"
                - name: PAPERLESS_TIKA_GOTENBERG_ENDPOINT
                  value: http://paperless-gotenberg:3000
                - name: PAPERLESS_TIKA_ENDPOINT
                  value: http://paperless-tika:9998
              volumeMounts:
                - name: data
                  mountPath: /usr/src/paperless/data
                - name: media
                  mountPath: /usr/src/paperless/media
                - name: export
                  mountPath: /usr/src/paperless/export
                - name: consume
                  mountPath: /usr/src/paperless/consume
              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi
                limits:
                  cpu: 1000m
                  memory: 2Gi
              #livenessProbe:
              #  httpGet:
              #    path: /
              #    port: 8000
              #  initialDelaySeconds: 30
              #  periodSeconds: 60
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: paperless-data
            - name: media
              persistentVolumeClaim:
                claimName: paperless-media
            - name: export
              persistentVolumeClaim:
                claimName: paperless-export
            - name: consume
              persistentVolumeClaim:
              claimName: paperless-consume

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: paperless-redis
      labels:
        app: paperless
        component: redis
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: paperless
          component: redis
      template:
        metadata:
          labels:
            app: paperless
            component: redis
          spec:
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - weight: 100
                    preference:
                      matchExpressions:
                        - key: region
                          operator: In
                          values:
                            - us
          containers:
            - name: redis
              image: docker.io/library/redis:8
              ports:
                - containerPort: 6379
              resources:
                requests:
                  cpu: 25m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              volumeMounts:
                - name: redisdata
                  mountPath: /data
              args: ["--save", "60", "1", "--loglevel", "warning"]
          volumes:
            - name: redisdata
              persistentVolumeClaim:
                claimName: paperless-redis
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: paperless-postgres
      labels:
        app: paperless
        component: postgres
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: paperless
          component: postgres
      template:
        metadata:
          labels:
            app: paperless
            component: postgres
          spec:
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - weight: 100
                    preference:
                      matchExpressions:
                        - key: region
                          operator: In
                          values:
                            - us
            containers:
              - name: postgres
                image: docker.io/library/postgres:18
                ports:
                  - containerPort: 5432
                envFrom:
                  - secretRef:
                      name: paperless-postgres
                env:
                  - name: PGDATA
                    value: /var/lib/postgresql/data/pgdata-files/
                volumeMounts:
                  - name: pgdata
                    mountPath: /var/lib/postgresql/data
                resources:
                  requests:
                    cpu: 50m
                    memory: 256Mi
                  limits:
                    cpu: 500m
                    memory: 512Mi
            volumes:
              - name: pgdata
                persistentVolumeClaim:
                  claimName: paperless-postgres
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: paperless-gotenberg
      labels:
        app: paperless
        component: gotenberg
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: paperless
          component: gotenberg
      template:
        metadata:
          labels:
            app: paperless
            component: gotenberg
          spec:
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - weight: 100
                    preference:
                      matchExpressions:
                        - key: region
                          operator: In
                          values:
                            - us
            containers:
              - name: gotenberg
                image: docker.io/gotenberg/gotenberg:8.24
                ports:
                  - containerPort: 3000
                command:
                  - "gotenberg"
                  - "--chromium-disable-javascript=true"
                  - "--chromium-allow-list=file:///tmp/.*"
                resources:
                  requests:
                    cpu: 50m
                    memory: 128Mi
                  limits:
                    cpu: 500m
                    memory: 512Mi
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: paperless-tika
      labels:
        app: paperless
        component: tika
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: paperless
          component: tika
      template:
        metadata:
          labels:
            app: paperless
            component: tika
          spec:
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - weight: 100
                    preference:
                      matchExpressions:
                        - key: region
                          operator: In
                          values:
                            - us
            containers:
              - name: tika
                image: docker.io/apache/tika:latest
                ports:
                  - containerPort: 9998
                resources:
                  requests:
                    cpu: 50m
                    memory: 256Mi
                  limits:
                    cpu: 500m
                    memory: 512Mi
